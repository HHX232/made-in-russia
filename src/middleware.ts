import {NextResponse} from 'next/server'
import type {NextRequest} from 'next/server'
import instance, {axiosClassic} from './api/api.interceptor'
import Cookies from 'js-cookie'
import {User} from './services/users.types'
import ICardFull from './services/card/card.types'

export const saveTokenStorage = (data: {accessToken: string; refreshToken: string}) => {
  if (typeof window !== 'undefined') {
    Cookies.set('accessToken', data.accessToken)
    Cookies.set('refreshToken', data.refreshToken)
    console.log('üîê –¢–æ–∫–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ:', !!data.accessToken, !!data.refreshToken)
  }
}

export const saveTokensInResponse = (response: NextResponse, data: {accessToken: string; refreshToken?: string}) => {
  response.cookies.set('accessToken', data.accessToken)
  if (data.refreshToken) {
    response.cookies.set('refreshToken', data.refreshToken)
  }
  console.log('üîê –¢–æ–∫–µ–Ω—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ response:', !!data.accessToken, !!data.refreshToken)
  return response
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
export const removeFromStorage = () => {
  // –î–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã (–±—Ä–∞—É–∑–µ—Ä)
  if (typeof window !== 'undefined') {
    Cookies.remove('accessToken')
    Cookies.remove('refreshToken')
    console.log('üóëÔ∏è –¢–æ–∫–µ–Ω—ã —É–¥–∞–ª–µ–Ω—ã –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ')
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑ NextResponse (–¥–ª—è middleware)
export const removeTokensFromResponse = (response: NextResponse) => {
  response.cookies.delete('accessToken')
  response.cookies.delete('refreshToken')
  console.log('üóëÔ∏è –¢–æ–∫–µ–Ω—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ response')
  return response
}
// , '/profile', '/vendor'
const protectedRoutes = ['/basket', '/profile', '/vendor', '/create-card']
const publicRoutes = ['/login', '/register']

export async function middleware(request: NextRequest) {
  console.log('üöÄ Middleware –∑–∞–ø—É—â–µ–Ω –¥–ª—è –ø—É—Ç–∏:', request.nextUrl.pathname)

  try {
    const {pathname} = request.nextUrl

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –≤ –∑–∞–ø—Ä–æ—Å–µ
    const accessToken = request.cookies.get('accessToken')?.value || ''
    const refreshToken = request.cookies.get('refreshToken')?.value || ''

    console.log('üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤:', {
      accessTokenExists: !!accessToken,
      refreshTokenExists: !!refreshToken,
      path: pathname
    })

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ create-card
    if (pathname === '/create-card' || pathname.startsWith('/create-card/')) {
      console.log('üé® –û–±–Ω–∞—Ä—É–∂–µ–Ω –º–∞—Ä—à—Ä—É—Ç create-card:', pathname)

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è refresh —Ç–æ–∫–µ–Ω–∞
      if (!refreshToken) {
        console.log('‚ùå –ù–µ—Ç refresh —Ç–æ–∫–µ–Ω–∞, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /login')
        return NextResponse.redirect(new URL('/login', request.url))
      }

      try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const {data: userData} = await instance.get<User>('/me', {
          headers: {
            Authorization: `Bearer ${accessToken}`,
            'X-Internal-Request': process.env.INTERNAL_REQUEST_SECRET!
          }
        })

        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —Ä–æ–ª—å:', userData.role)

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (userData.role !== 'Vendor' && userData.role !== 'Admin') {
          console.log('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω –¥–ª—è —Ä–æ–ª–∏:', userData.role)
          return NextResponse.redirect(new URL('/', request.url))
        }

        // –ï—Å–ª–∏ —ç—Ç–æ –º–∞—Ä—à—Ä—É—Ç —Å ID —Ç–æ–≤–∞—Ä–∞
        if (pathname.startsWith('/create-card/') && pathname !== '/create-card') {
          const pathSegments = pathname.split('/')
          const productId = pathSegments[2]

          console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–æ–≤–∞—Ä—É —Å ID:', productId)

          if (!productId || isNaN(Number(productId))) {
            console.log('‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞:', productId)
            return NextResponse.redirect(new URL('/create-card', request.url))
          }

          try {
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ
            const {data: productData} = await axiosClassic.get<ICardFull>(`/products/${productId}`, {
              headers: {
                Authorization: `Bearer ${accessToken}`,
                'X-Internal-Request': process.env.INTERNAL_REQUEST_SECRET!
              }
            })

            const productOwnerId = productData?.user.id
            console.log('üì¶ –í–ª–∞–¥–µ–ª–µ—Ü —Ç–æ–≤–∞—Ä–∞:', productOwnerId, '–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', userData.id)

            // –ê–¥–º–∏–Ω –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ç–æ–≤–∞—Ä–∞–º
            if (userData.role === 'Admin') {
              console.log('üëë Admin –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –ª—é–±–æ–≥–æ —Ç–æ–≤–∞—Ä–∞')
              return NextResponse.next()
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —Ç–æ–≤–∞—Ä–∞
            if (productOwnerId !== userData.id) {
              console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —Ç–æ–≤–∞—Ä–∞, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /create-card')
              return NextResponse.redirect(new URL('/create-card', request.url))
            }

            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —Ç–æ–≤–∞—Ä–∞, –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω')
            return NextResponse.next()
          } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞:', error)
            // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ /create-card
            return NextResponse.redirect(new URL('/create-card', request.url))
          }
        }

        // –î–ª—è –º–∞—Ä—à—Ä—É—Ç–∞ /create-card –±–µ–∑ ID –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø Vendor –∏ Admin
        return NextResponse.next()
      } catch (error) {
        console.error('‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)

        // –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
        console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞')
        try {
          const {data: tokenData} = await axiosClassic.patch<{
            accessToken: string
          }>(
            '/me/current-session/refresh',
            {refreshToken},
            {
              headers: {
                'X-Internal-Request': process.env.INTERNAL_REQUEST_SECRET!
              }
            }
          )

          console.log('‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω')

          // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ—Ç–≤–µ—Ç –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã
          const response = NextResponse.next()
          response.cookies.set('accessToken', tokenData.accessToken)

          // –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º
          const {data: userData} = await instance.get<User>('/me', {
            headers: {
              Authorization: `Bearer ${tokenData.accessToken}`,
              'X-Internal-Request': process.env.INTERNAL_REQUEST_SECRET!
            }
          })

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          if (userData.role !== 'Vendor' && userData.role !== 'Admin') {
            console.log('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω –¥–ª—è —Ä–æ–ª–∏:', userData.role)
            const redirectResponse = NextResponse.redirect(new URL('/', request.url))
            redirectResponse.cookies.set('accessToken', tokenData.accessToken)
            return redirectResponse
          }

          // –ï—Å–ª–∏ —ç—Ç–æ –º–∞—Ä—à—Ä—É—Ç —Å ID —Ç–æ–≤–∞—Ä–∞
          if (pathname.startsWith('/create-card/') && pathname !== '/create-card') {
            const pathSegments = pathname.split('/')
            const productId = pathSegments[2]

            if (!productId || isNaN(Number(productId))) {
              const redirectResponse = NextResponse.redirect(new URL('/create-card', request.url))
              redirectResponse.cookies.set('accessToken', tokenData.accessToken)
              return redirectResponse
            }

            try {
              const {data: productData} = await axiosClassic.get<ICardFull>(`/products/${productId}`, {
                headers: {
                  Authorization: `Bearer ${tokenData.accessToken}`,
                  'X-Internal-Request': process.env.INTERNAL_REQUEST_SECRET!
                }
              })

              const productOwnerId = productData?.user?.id

              if (userData.role === 'Admin') {
                return response
              }

              if (productOwnerId !== userData.id) {
                const redirectResponse = NextResponse.redirect(new URL('/create-card', request.url))
                redirectResponse.cookies.set('accessToken', tokenData.accessToken)
                return redirectResponse
              }

              return response
            } catch (error) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞:', error)
              const redirectResponse = NextResponse.redirect(new URL('/create-card', request.url))
              redirectResponse.cookies.set('accessToken', tokenData.accessToken)
              return redirectResponse
            }
          }

          return response
        } catch (e) {
          console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω:', e)
          const redirectResponse = NextResponse.redirect(new URL('/login', request.url))
          return removeTokensFromResponse(redirectResponse)
        }
      }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    if (protectedRoutes.some((route) => pathname.startsWith(route))) {
      console.log('üõ°Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç:', pathname)

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è refresh —Ç–æ–∫–µ–Ω–∞
      if (!refreshToken) {
        console.log('‚ùå –ù–µ—Ç refresh —Ç–æ–∫–µ–Ω–∞, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /login')
        return NextResponse.redirect(new URL('/login', request.url))
      }

      console.log('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å accessToken')
      try {
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–µ–∫—É—â–∏–º accessToken
        const {data: userData} = await instance.get<User>('/me', {
          headers: {
            Authorization: `Bearer ${accessToken}`,
            'X-Internal-Request': process.env.INTERNAL_REQUEST_SECRET!
          }
        })
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω')

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        // Admin –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–∞—Ä—à—Ä—É—Ç–∞–º
        if (userData.role === 'Admin') {
          console.log('üëë Admin –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–∞—Ä—à—Ä—É—Ç–∞–º')
          return NextResponse.next()
        }

        if (userData.role === 'Vendor' && pathname === '/profile') {
          console.log('üîÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ User —Å —Ä–æ–ª—å—é Vendor –Ω–∞ /vendor')
          return NextResponse.redirect(new URL('/vendor', request.url))
        } else if (userData.role === 'User' && pathname === '/vendor') {
          console.log('üîÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ User —Å —Ä–æ–ª—å—é User –Ω–∞ /profile')
          return NextResponse.redirect(new URL('/profile', request.url))
        }

        return NextResponse.next()
      } catch (error) {
        console.error('‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–µ–∫—É—â–∏–º accessToken:', error)

        console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ —Å refreshToken')
        try {
          // –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
          const {data: tokenData} = await axiosClassic.patch<{
            accessToken: string
          }>(
            '/me/current-session/refresh',
            {refreshToken},
            {
              headers: {
                'X-Internal-Request': process.env.INTERNAL_REQUEST_SECRET!
              }
            }
          )

          console.log('‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω')

          // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ—Ç–≤–µ—Ç –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã
          const response = NextResponse.next()
          response.cookies.set('accessToken', tokenData.accessToken)
          // refreshToken –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –≤–µ—Ä–Ω—É–ª –Ω–æ–≤—ã–π
          console.log('üîê –ù–æ–≤—ã–π accessToken —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ cookies')

          try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º
            console.log(process.env.INTERNAL_REQUEST_SECRET)
            const {data: userData} = await instance.get<User>('/me', {
              headers: {
                Authorization: `Bearer ${tokenData.accessToken}`,
                'X-Internal-Request': process.env.INTERNAL_REQUEST_SECRET!
              }
            })
            console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º —É—Å–ø–µ—à–Ω–∞')

            if (userData.role === 'Admin') {
              console.log('üëë Admin –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–∞—Ä—à—Ä—É—Ç–∞–º')
              return response
            }

            if (userData.role === 'Vendor' && pathname === '/profile') {
              console.log('üîÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ User —Å —Ä–æ–ª—å—é Vendor –Ω–∞ /vendor')
              const redirectResponse = NextResponse.redirect(new URL('/vendor', request.url))
              redirectResponse.cookies.set('accessToken', tokenData.accessToken)
              return redirectResponse
            } else if (userData.role === 'User' && pathname === '/vendor') {
              console.log('üîÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ User —Å —Ä–æ–ª—å—é User –Ω–∞ /profile')
              const redirectResponse = NextResponse.redirect(new URL('/profile', request.url))
              redirectResponse.cookies.set('accessToken', tokenData.accessToken)
              return redirectResponse
            }

            return response
          } catch (e) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–∂–µ —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º:', e)
            const redirectResponse = NextResponse.redirect(new URL('/login', request.url))
            return removeTokensFromResponse(redirectResponse)
          }
        } catch (e) {
          console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω:', e)
          const redirectResponse = NextResponse.redirect(new URL('/login', request.url))
          return removeTokensFromResponse(redirectResponse)
        }
      }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—É–±–ª–∏—á–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ (login, register)
    if (publicRoutes.some((route) => pathname.startsWith(route))) {
      console.log('üåê –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø—É–±–ª–∏—á–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç:', pathname)

      // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤, —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø—É–±–ª–∏—á–Ω—ã–º –º–∞—Ä—à—Ä—É—Ç–∞–º
      if (!accessToken && !refreshToken) {
        console.log('‚úÖ –î–æ—Å—Ç—É–ø –∫ –ø—É–±–ª–∏—á–Ω–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É —Ä–∞–∑—Ä–µ—à–µ–Ω (–Ω–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤)')
        return NextResponse.next()
      }

      // –ï—Å–ª–∏ –µ—Å—Ç—å refreshToken, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
      if (refreshToken) {
        console.log('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–º –º–∞—Ä—à—Ä—É—Ç–µ')
        try {
          // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–µ–∫—É—â–∏–º accessToken
          const {data: userData} = await instance.get<User>('/me', {
            headers: {
              Authorization: `Bearer ${accessToken}`,
              'X-Internal-Request': process.env.INTERNAL_REQUEST_SECRET!
            }
          })
          console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é')

          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
          if (userData.role === 'Admin') {
            console.log('üëë Admin –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é')
            return NextResponse.redirect(new URL('/', request.url))
          } else if (userData.role === 'Vendor') {
            console.log('üîÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Vendor –Ω–∞ /vendor')
            return NextResponse.redirect(new URL('/vendor', request.url))
          } else if (userData.role === 'User') {
            console.log('üîÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ User –Ω–∞ /profile')
            return NextResponse.redirect(new URL('/profile', request.url))
          }

          return NextResponse.redirect(new URL('/', request.url))
        } catch (error) {
          console.error(
            '‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–µ–∫—É—â–∏–º accessToken –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–º –º–∞—Ä—à—Ä—É—Ç–µ:',
            error
          )

          console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–º –º–∞—Ä—à—Ä—É—Ç–µ')
          try {
            // –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
            const {data: tokenData} = await axiosClassic.patch<{
              accessToken: string
            }>(
              '/me/current-session/refresh',
              {refreshToken},
              {
                headers: {
                  'X-Internal-Request': process.env.INTERNAL_REQUEST_SECRET!
                }
              }
            )

            console.log('‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–º –º–∞—Ä—à—Ä—É—Ç–µ')

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º
            try {
              const {data: userData} = await instance.get<User>('/me', {
                headers: {
                  Authorization: `Bearer ${tokenData.accessToken}`,
                  'X-Internal-Request': process.env.INTERNAL_REQUEST_SECRET!
                }
              })

              // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
              let redirectUrl = '/'
              if (userData.role === 'Admin') {
                console.log('üëë Admin –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é')
                redirectUrl = '/'
              } else if (userData.role === 'Vendor') {
                console.log('üîÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Vendor –Ω–∞ /vendor')
                redirectUrl = '/vendor'
              } else if (userData.role === 'User') {
                console.log('üîÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ User –Ω–∞ /profile')
                redirectUrl = '/profile'
              }

              // –°–æ–∑–¥–∞–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã
              const response = NextResponse.redirect(new URL(redirectUrl, request.url))
              response.cookies.set('accessToken', tokenData.accessToken)
              // refreshToken –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º
              console.log('üîê –ù–æ–≤—ã–π accessToken —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ cookies –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–º –º–∞—Ä—à—Ä—É—Ç–µ')

              return response
            } catch (userError) {
              console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', userError)
              // –ù–∞ –ø—É–±–ª–∏—á–Ω–æ–º –º–∞—Ä—à—Ä—É—Ç–µ –º—ã –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø, –µ—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —É–¥–∞–ª–æ—Å—å
              const response = NextResponse.next()
              return removeTokensFromResponse(response)
            }
          } catch (e) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–º –º–∞—Ä—à—Ä—É—Ç–µ:', e)
            // –ù–∞ –ø—É–±–ª–∏—á–Ω–æ–º –º–∞—Ä—à—Ä—É—Ç–µ –º—ã –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø, –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å
            // –ü—Ä–∏ —ç—Ç–æ–º —É–¥–∞–ª—è–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã
            const response = NextResponse.next()
            return removeTokensFromResponse(response)
          }
        }
      }

      console.log('‚úÖ –î–æ—Å—Ç—É–ø –∫ –ø—É–±–ª–∏—á–Ω–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É —Ä–∞–∑—Ä–µ—à–µ–Ω')
      return NextResponse.next()
    }

    if (pathname.startsWith('/data-vendor/')) {
      console.log('üöÄ Middleware –∑–∞–ø—É—â–µ–Ω –¥–ª—è –ø—É—Ç–∏:', request.nextUrl.pathname)

      // –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ –ø—É—Ç–∏ URL
      const pathSegments = pathname.split('/')
      const id = pathSegments[2] // –ü–æ–ª—É—á–∞–µ–º ID –∏–∑ /data-vendor/{id}

      console.log('–∏—â–µ–º –ø—Ä–æ–¥–∞–≤—Ü–∞ —Å id:', id)

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ ID —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –≤–∞–ª–∏–¥–µ–Ω
      if (!id || isNaN(Number(id))) {
        console.log('‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID –ø—Ä–æ–¥–∞–≤—Ü–∞:', id)
        // –í–º–µ—Å—Ç–æ notFound() –¥–µ–ª–∞–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ 404 —Å—Ç—Ä–∞–Ω–∏—Ü—É
        return NextResponse.redirect(new URL('/404', request.url))
      }

      try {
        const {data} = await axiosClassic.get<User>(`/vendor/${id}`, {
          headers: {
            Authorization: `Bearer ${accessToken}`,
            'X-Internal-Request': process.env.INTERNAL_REQUEST_SECRET!
          }
        })

        console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ–¥–∞–≤–µ—Ü:', data.role)

        // TODO –†–ê–°–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–¢–¨
        //! const {data: userData} = await instance.get<User>('/me', {
        //!   headers: {
        //!     Authorization: `Bearer ${accessToken}`,
        //!     'X-Internal-Request': process.env.INTERNAL_REQUEST_SECRET!
        //!   }
        //! })
        //! if (data.id === userData.id) {
        //!   return NextResponse.redirect(new URL('/vendor', request.url))
        //! }
        return NextResponse.next()
      } catch (e) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–∞:', e)

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        const error = e as any
        if (error?.response?.status === 404 || error?.response?.status === 400) {
          // –ü—Ä–æ–¥–∞–≤–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å - —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ 404
          return NextResponse.redirect(new URL('/404', request.url))
        }

        // –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
        return NextResponse.next()
      }
    }
    // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    console.log('üåç –û–±—ã—á–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ')
    return NextResponse.next()
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ middleware:', error)
    // –í —Å–ª—É—á–∞–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    return NextResponse.next()
  }
}

export const config = {
  matcher: ['/((?!api|_next/static|_next/image|favicon.ico|.*\\.(?:svg|jpg|jpeg|png|gif|webp|ico|json|xml|txt)).*)']
}
